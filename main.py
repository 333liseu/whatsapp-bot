from fastapi import FastAPI, Form
from twilio.twiml.messaging_response import MessagingResponse
import uvicorn
import requests
import unicodedata

# Inicializa o app FastAPI
app = FastAPI()

# Fun√ß√£o para normalizar o texto (remove acentos e transforma em min√∫sculas)
def normalizar_texto(texto: str) -> str:
    texto = unicodedata.normalize('NFKD', texto).encode('ASCII', 'ignore').decode('ASCII')
    return texto.lower().strip()

# Fun√ß√£o para buscar o pre√ßo atual do BTC
def get_btc_price():
    try:
        response = requests.get('https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd,brl')
        data = response.json()
        price_usd = f"${data['bitcoin']['usd']:,.2f}"
        price_brl = f"R${data['bitcoin']['brl']:,.2f}"
        return price_usd, price_brl
    except Exception as e:
        print(f"‚ùå Erro ao buscar o pre√ßo do BTC: {e}")
        return "‚ö†Ô∏è Erro ao obter o pre√ßo do BTC.", None

# Rota de teste para confirmar que o servidor est√° rodando
@app.get("/")
async def root():
    return {"message": "‚úÖ Bot WhatsApp rodando na Render.com!"}

# Endpoint do webhook do WhatsApp
@app.post("/whatsapp")
async def whatsapp_webhook(Body: str = Form(...)):
    msg = normalizar_texto(Body)
    print(f"üì© Mensagem recebida (normalizada): {msg}")
    response = MessagingResponse()
    message = response.message()

    # Responde aos comandos "pre√ßo BTC" e "dca carteira"
    if msg in ["preco btc", "pre√ßo btc"]:  # Aceita ambas as formas com e sem acento
        price_usd, price_brl = get_btc_price()
        if price_brl:
            message.body(f"üìà O pre√ßo **atual** do BTC √©:\nüíµ USD: {price_usd}\nüáßüá∑ BRL: {price_brl}")
        else:
            message.body("‚ö†Ô∏è Erro ao obter o pre√ßo do BTC.")
    elif msg == "dca carteira":
        message.body("üí∞ Sugiro comprar 10% em BTC com base nas an√°lises atuais.")
    else:
        message.body("ü§ñ Comando n√£o reconhecido. Tente: 'pre√ßo BTC' ou 'DCA carteira'.")

    return str(response)

# Inicia o servidor quando rodado diretamente
if __name__ == "__main__":
    uvicorn.run(app, host="0.0.0.0", port=10000)
